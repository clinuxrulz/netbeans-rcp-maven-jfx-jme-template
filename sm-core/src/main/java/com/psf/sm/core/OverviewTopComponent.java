/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/NetBeansModuleDevelopment-files/templateTopComponent637.java to edit this template
 */
package com.psf.sm.core;

import com.psf.cursed_signals.CS;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//com.psf.sm.core//Overview//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "OverviewTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "editor", openAtStartup = true)
@ActionID(category = "Window", id = "com.psf.sm.core.OverviewTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_OverviewAction",
        preferredID = "OverviewTopComponent"
)
@Messages({
    "CTL_OverviewAction=Overview",
    "CTL_OverviewTopComponent=Overview Window",
    "HINT_OverviewTopComponent=This is a Overview window"
})
public final class OverviewTopComponent extends TopComponent {

    public OverviewTopComponent() {
        initComponents();
        setName(Bundle.CTL_OverviewTopComponent());
        setToolTipText(Bundle.HINT_OverviewTopComponent());
        putClientProperty(TopComponent.PROP_CLOSING_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_DRAGGING_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_MAXIMIZATION_DISABLED, Boolean.TRUE);
        putClientProperty(TopComponent.PROP_UNDOCKING_DISABLED, Boolean.TRUE);
        var s = CS.createSignal(0);
        btnPlus.addActionListener((e) -> s.set().accept(s.get().get() + 1));
        btnMinus.addActionListener((e) -> s.set().accept(s.get().get() - 1));
        CS.createRoot((dispose) -> {
            var m = CS.<String>createMemo(() -> {
                return "Value: " + s.get().get().toString();
            });
            CS.createEffect(() -> {
                lblValue.setText(m.get());
            });
            return dispose;
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblValue = new javax.swing.JLabel();
        btnPlus = new javax.swing.JButton();
        btnMinus = new javax.swing.JButton();

        org.openide.awt.Mnemonics.setLocalizedText(lblValue, org.openide.util.NbBundle.getMessage(OverviewTopComponent.class, "OverviewTopComponent.lblValue.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(btnPlus, org.openide.util.NbBundle.getMessage(OverviewTopComponent.class, "OverviewTopComponent.btnPlus.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(btnMinus, org.openide.util.NbBundle.getMessage(OverviewTopComponent.class, "OverviewTopComponent.btnMinus.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(lblValue)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnMinus)
                    .addComponent(btnPlus))
                .addContainerGap(212, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblValue)
                    .addComponent(btnPlus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMinus)
                .addContainerGap(186, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMinus;
    private javax.swing.JButton btnPlus;
    private javax.swing.JLabel lblValue;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
